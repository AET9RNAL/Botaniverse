buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://maven.minecraftforge.net/"
        }
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        flatDir {
            dirs 'libs'
        }
        maven {
            url "https://cursemaven.com"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'com.matthewprenger:CurseGradle:1.0-SNAPSHOT'
        classpath "gradle.plugin.net.kyori:blossom:1.1.0"
    }
}


apply plugin: 'java'
apply plugin: 'idea'
apply plugin: "net.kyori.blossom"
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'com.matthewprenger.cursegradle'
apply plugin: 'maven'

ext.configFile = file('build.properties')

ext.config = parseConfig(configFile)
ext.priv = parseConfig(file('private.properties'))

version = "${config.version}-${config.build_number}"
group = "aeternal.botaniverse" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = config.mod_name


minecraft {
    version = "${config.mc_version}-${config.forge_version}"
    runDir = "run"

    mappings = config.mc_mappings
    //This, does the token replacement.
    //Though, I reccomend this to be replaced with a token such as @VERSION@
    replace 'GRADLE:BUILD', config.build_number
    replace 'GRADLE:VERSION', config.version

    replaceIn 'LibMisc.java' //I may have missed another file, though I can only find it in here.
    useDepAts = true
    makeObfSourceJar = false
}

repositories {
    mavenCentral()
    maven {
        url "https://www.cursemaven.com"
    }

}
//This here is for SCP
configurations {
    sshAntTask
}

//End of the SCP config

dependencies {
    compileOnly 'javax.annotation:javax.annotation-api:1.3.2'
    runtimeOnly "curse.maven:baubles-227083:2518667"
    compileOnly "curse.maven:baubles-227083:2518667"
    runtimeOnly "curse.maven:botania-225643:2846950"
    compileOnly "curse.maven:botania-225643:2846950"
    runtimeOnly "curse.maven:jei-integration-265917:2951731"
    compileOnly "curse.maven:jei-integration-265917:2951731"
    compileOnly "curse.maven:hammer-lib-247401:3366814"
    runtimeOnly "curse.maven:hammer-lib-247401:3366814"
    compileOnly "curse.maven:botanicadditions-310637:2939405"
    runtimeOnly "curse.maven:botanicadditions-310637:2939405"
    compileOnly "curse.maven:crafttweaker2-239197:4814073"
    runtimeOnly "curse.maven:crafttweaker2-239197:4814073"

    //and a bit more for SCP
    sshAntTask "org.apache.ant:ant-jsch:1.7.1", "jsch:jsch:0.1.29"
}

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

processResources {
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    manifest {
        attributes 'FMLAT': 'botaniverse_at.cfg'
    }

    //rename the default output, for some better... sanity with scipts
    archiveName = "${baseName} ${version}.${extension}"

    exclude "**/*.bat"
    exclude "**/*.psd"
    exclude "**/*.exe"
}

task deobfJar(type: Jar) {
    from(sourceSets.main.output)
    archiveName = "${baseName} ${version}-deobf.${extension}"
    manifest {
        attributes 'FMLAT': 'botaniverse_at.cfg'
    }
}

task srcJar(type: Jar) {
    from(sourceSets.main.java)
    classifier = 'sources'
    archiveName = "${baseName} ${version}-sources.${extension}"
    manifest {
        attributes 'FMLAT': 'botaniverse_at.cfg'
    }
}

artifacts {
    archives deobfJar
    archives srcJar
}

import java.util.regex.Pattern

task sortArtifacts(type: Copy) {
    from jar.destinationDir
    into config.dir_output
    //Put each jar with a classifier in a subfolder with the classifier as its name
    eachFile {
        //This matcher is used to get the classifier of the jar
        def matcher = Pattern.compile("$config.mod_name $version-(?<classifier>\\w+).jar").matcher(it.name)
        //Only change the destination for full matches, i.e jars with classifiers
        if (matcher.matches())
        {
            def classifier = matcher.group('classifier')
            /* Set the relative path to change the destination, since
             * Gradle doesn't seem to like the absolute path being set*/
            it.relativePath = it.relativePath.parent.append(false, classifier, it.name)
        }
    }
}

// This is the upload task from the build.xml
task upload {
    doLast {
        scp('/') {
            fileset(file: 'web/changelog.txt')
            fileset(file: 'web/versions.ini')
        }
    }
}

// This is deploy_web task
task deployWeb {
    doLast {
        scp('/') {
            fileset(dir: 'web') //everything from the web directory
        }
    }
}

def scp(String dir, Closure antFileset = {}) {
    ant {
        taskdef(
                name: 'scp',
                classname: 'org.apache.tools.ant.taskdefs.optional.ssh.Scp',
                classpath: configurations.sshAntTask.asPath)

        String dirstr = priv.scp_dir + dir
        Map scpArgs = [
                todir  : dirstr,
                password  : priv.scp_pass,
                sftp: true,
                trust: 'yes'
        ]

        delegate.scp(scpArgs) {
            antFileset.delegate = delegate
            antFileset()
        }
    }
}


def parseConfig(File config) {
    if(config.exists()){
        config.withReader {
            def prop = new Properties()
            prop.load(it)
            return (new ConfigSlurper().parse(prop))
        }
    } else {
        return null
    }
}

curseforge {
    if(priv == null){
        return
    }
    apiKey = priv.cfkey
    project {
        id = "225643"
        changelog = """
		    See http://botaniamod.net/changelog.php#${version}
        """
        releaseType = "release"
        addGameVersion "${config.cf_meta_version}"
        relations {
            requiredLibrary 'baubles'
            optionalLibrary 'quark'
            optionalLibrary 'albedo'
        }
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "file://" + (System.getenv("local_maven") != null ? System.getenv("local_maven") : System.getenv("bamboo_local_maven")))
        }
    }
}
tasks.uploadArchives.dependsOn reobfJar

defaultTasks 'clean', 'build', 'sortArtifacts', 'incrementBuildNumber', 'upload'
